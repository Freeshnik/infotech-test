Необходимо сделать на фреймворке Yii2 + MySQL каталог книг. Книга может иметь несколько авторов. Тестовое задание можно делать без верстки.

1. Книга - название, год выпуска, описание, isbn, фото главной страницы.
2. Авторы - ФИО.

Права на доступ:
1. Гость - только просмотр + подписка на новые книги автора.
2. Юзер - просмотр, добавление, редактирование, удаление. (CRUD). Отчет без разницы.


Отчет - ТОП 10 авторов выпустивших больше книг за какой-то год.

ПЛЮСОМ БУДЕТ
Уведомление о поступлении книг из подписки должно отправляться на смс гостю.

https://smspilot.ru/
там "Для тестирования можно использовать ключ эмулятор (реальной отправки SMS не происходит)."

Л


Ответы на часто задаваемые вопросы/пожелания к выполнению:

    1) Нужно сделать web приложение? Не API? – web

    2) Нужна авторизация? – Да

    3) Отчет нужен как PDF? или как отдельная страница? Если отдельная страница или PDF, то кто имеет право ее видеть? - Отдельная страница, доступ для всех

    4) Нужен функционал администратора, который может управлять подпиской/отпиской? – не нужен

    5) Как осуществляется отписка от новых поступлений? – это не требуется

    6) По тестовому заданию нужна БД MySQL. Можно прислать в виде файлов, но без директорий runtime и vendor. Дамп БД не нужен, нужны миграции.

    7) Пример кода будут запускать локально или смотреть по коду? – просто смотреть.

    8) Какие версии PHP и СУБД использовать? – PHP 8+, MySQL/MariaDB
    9) Какой шаблон yii2 использовать advanced или basic? – любой, который Вы сочтёте более подходящим под эту задачу
    10)  Для rbac использовать phpManager или dbManager? – не принципиально
    11)  Выполненное тестовое прислать архивом или ссылкой (GitHub, Bitbucket и т.п.) – любым удобным для Вас способом.


-----------------------

Сопроводительное письмо:
- Задание выполнено на Yii2 с использованием PHP 8.2, MySQL Percona, Redis и Nginx.
- Для выполнения был взят кастомный шаблон Yii2, который отлично подходит для создания моно-репозитория.
На верхнем уровне основные директории app и web. Внутри директории app - config, lib и modules. В модулях уже были некоторые заготовки, поэтому в коде могут быть участки, не относящиеся к заданию.
- Последняя миграция генерирует и вставляет в БД 20 авторов и 500 книг.

Контроллеры выполнены в трёх разных стилях:
1) Обычный Yii2 - всё к экшен методах. Пример: AuthController и AuthorController
2) Экшен как отдельный класс. Механика экшена выполняется в методе run. Можно прокидывать зависимость в конструкторе. Пример: BookController -> BookIndex и др.
3) Обычный Yii2, но с вынесением логики в сервис + репозиторий (при большом кол-ве параметров стоит добавить класс-форму для их валидации, но в report контроллере я не делал форму из-за малого кол-ва параметров) Пример: ReportController.
Из трёх форм предпочитаю 3-ю.

Бонус задание - уведомление сделал через очереди в Redis:
Разовый запуск: docker exec -it yii2-php php yii queue/run
В режиме прослушивания: docker exec -it yii2-php php yii queue/listen

Ссылка на репозиторий: https://github.com/Freeshnik/infotech-test